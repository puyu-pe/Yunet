name: Build Production
run-name: By @${{ github.actor }} - Build Production - ${{github.ref_name}} üî¥üöÄ
env:
    CI_COMMIT_REF_NAME: ${{github.ref_name}}

on:
    workflow_dispatch

permissions:
    packages: write
    contents: read

jobs:
    Install:
        runs-on: ubuntu-22.04
        steps:
            -   name: üéØ Checkout main Branch
                uses: actions/checkout@v3
                with:
                    ref: main
                    fetch-depth: 1

            -   name: üì¶ Use Node.js 18.X
                uses: actions/setup-node@v3
                with:
                    node-version: '18.x'

            -   name: üõ† NPM Install and build
                run: |
                    npm rm pm2
                    npm ci > /dev/null 2>&1
                    rm -fr public scripts test
                    rm appspec.yml README.md 

            -   name: Config env
                run: |
                    mv env/example-development.env env/development.env
                    mv env/example-production.env env/production.env

            -   name: Compress files
                run: zip -r archive.zip ./

            -   uses: actions/upload-artifact@v3
                with:
                    name: my-artifact
                    path: archive.zip
                    retention-days: 7

    Build:
        needs: Install
        runs-on: ubuntu-22.04
        steps:
            -   uses: actions/download-artifact@v3
                with:
                    name: my-artifact
                    path: .

            -   name: Unzip files and delete
                run: |
                    unzip -o archive.zip
                    rm archive.zip

            -   name: Log in to GitHub Container Registry
                uses: docker/login-action@v1
                with:
                    registry: ghcr.io
                    username: ${{ github.repository_owner }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Extract version
                id: extract-version
                run: echo "::set-output name=VERSION::$(cat VERSION)"

            -   name: Build and push Docker image
                uses: docker/build-push-action@v2
                with:
                    context: .
                    file: .docker/release/Dockerfile
                    push: true
                    tags: |
                      ghcr.io/${{ github.repository }}/bifrost:${{ steps.extract-version.outputs.VERSION }}
                      ghcr.io/${{ github.repository }}/bifrost:latest

            -   run: echo "üçè This job's status is ${{ job.status }}."
